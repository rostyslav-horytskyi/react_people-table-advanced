{"version":3,"sources":["components/Header.tsx","components/HomePage.tsx","components/NotFoundPage.tsx","components/PeopleContext.tsx","api/people.js","components/PersonName.tsx","components/PersonRow.tsx","components/PeopleTable.tsx","components/helpers.js","components/NewPerson.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Header","className","to","exact","activeClassName","type","HomePage","NotFoundPage","PeopleContext","React","createContext","people","setPeople","PeopleProvider","children","useState","useEffect","fetch","then","response","json","contextValue","Provider","value","PersonName","props","name","sex","slug","style","color","PersonRow","memo","useLocation","pathname","search","person","born","died","motherName","fatherName","mother","father","backgroundColor","includes","styleForTable","borderCollapse","PeopleTable","useContext","lowerQuery","query","toLowerCase","sortBy","handleSortChange","sortOrder","filteredPeople","filter","getSortPeople","persons","sort","a","b","localeCompare","reverse","getParent","parentName","find","showOrderIMG","title","src","alt","onClick","map","key","validateName","match","validateDied","length","validateBorn","NewPerson","setPerson","blur","setBlur","isSecondClick","setClick","action","onSubmit","e","preventDefault","newPerson","toLocaleLowerCase","trim","split","join","createNewPerson","htmlFor","onBlur","id","onChange","target","checked","disabled","age","validateAge","PeoplePage","history","useHistory","searchParams","URLSearchParams","appliedQuery","get","setQuery","applyQuery","useCallback","debounce","newQuery","set","delete","push","toString","placeholder","event","textContent","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e76dc95.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header = () => (\n  <>\n    <header className=\"header\">\n      <nav>\n        <NavLink\n          to=\"/\"\n          exact\n          activeClassName=\"is-active\"\n        >\n          <button className=\"button is-dark\" type=\"button\">\n            Home\n          </button>\n        </NavLink>\n        <NavLink\n          to=\"people\"\n          activeClassName=\"is-active\"\n        >\n          <button className=\"button is-dark\" type=\"button\">\n            People\n          </button>\n        </NavLink>\n      </nav>\n    </header>\n  </>\n);\n","import React from 'react';\n\nexport const HomePage = () => (\n  <h2>Home page</h2>\n);\n","import React from 'react';\n\nexport const NotFoundPage = () => (\n  <h2>Page not found</h2>\n);\n","import React, {\n  useState, useEffect, Dispatch, SetStateAction,\n} from 'react';\nimport { getPeople } from '../api/people';\nimport { Person } from './PersonRow';\n\ntype ContextProps = {\n  people: Person[];\n  setPeople: Dispatch<SetStateAction<Person[]>>;\n};\n\nconst contextProps: ContextProps = {\n  people: [],\n  setPeople: () => {},\n};\n\nexport const PeopleContext = React.createContext<ContextProps>(contextProps);\n\nexport const PeopleProvider: React.FC = ({ children }) => {\n  const [people, setPeople] = useState<Array<Person>>([]);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople);\n  }, []);\n\n  const contextValue: ContextProps = {\n    people,\n    setPeople,\n  };\n\n  return (\n    <PeopleContext.Provider value={contextValue}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","const PEOPLE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = () => fetch(PEOPLE_URL)\n  .then(response => response.json());\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const PersonName = (props: {\n  name: string;\n  sex: string;\n  slug: string;\n}) => {\n  const { name, sex, slug } = props;\n\n  const setColor = () => {\n    if (sex === 'f') {\n      return 'red';\n    }\n\n    if (sex === 'm') {\n      return 'blue';\n    }\n\n    return 'black';\n  };\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      style={{\n        color: setColor(),\n      }}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { useLocation } from 'react-router';\nimport { PersonName } from './PersonName';\n\nexport type Person = {\n  [key: string]: string;\n};\n\nexport const PersonRow = React.memo((props: {\n  person: Person;\n  mother: Person | undefined;\n  father: Person | undefined;\n}) => {\n  const { pathname, search } = useLocation();\n  const {\n    name, sex, born, died, motherName, fatherName, slug,\n  } = props.person;\n  const { mother, father } = props;\n\n  return (\n    <tr className=\"Person\" style={{ backgroundColor: pathname.includes(slug) ? 'yellow' : '' }}>\n      <td\n        style={{\n          backgroundColor: search.includes('name') ? '#c0c0c0' : '',\n        }}\n      >\n        <PersonName\n          name={name}\n          sex={sex}\n          slug={slug}\n        />\n      </td>\n      <td\n        style={{\n          backgroundColor: search.includes('sex') ? '#c0c0c0' : '',\n        }}\n      >\n        {sex}\n      </td>\n      <td\n        style={{\n          backgroundColor: search.includes('born') ? '#c0c0c0' : '',\n        }}\n      >\n        {born}\n      </td>\n      <td\n        style={{\n          backgroundColor: search.includes('died') ? '#c0c0c0' : '',\n        }}\n      >\n        {died}\n      </td>\n      <td>\n        <PersonName\n          name={mother ? mother.name : motherName}\n          sex={mother ? mother.sex : ''}\n          slug={mother ? mother.slug : ''}\n        />\n      </td>\n      <td>\n        <PersonName\n          name={father ? father.name : fatherName}\n          sex={father ? father.sex : ''}\n          slug={father ? father.slug : ''}\n        />\n      </td>\n    </tr>\n  );\n});\n","import React, { useContext, MouseEventHandler } from 'react';\nimport { PeopleContext } from './PeopleContext';\nimport { PersonRow, Person } from './PersonRow';\n\nconst styleForTable: React.CSSProperties = {\n  borderCollapse: 'collapse',\n};\n\ninterface Props {\n  handleSortChange: MouseEventHandler;\n  sortBy: string;\n  sortOrder: string;\n  query: string;\n}\n\nexport const PeopleTable = React.memo(\n  (props: Props) => {\n    const { people } = useContext(PeopleContext);\n    const lowerQuery = props.query.toLowerCase();\n    const {\n      sortBy, handleSortChange, sortOrder, query,\n    } = props;\n\n    const getFilteredPeople = (): Person[] => {\n      if (query) {\n        return people.filter((person: Person) => {\n          if (!person.name || !person.motherName || !person.fatherName) {\n            return null;\n          }\n\n          return (person.name + person.motherName + person.fatherName)\n            .toLowerCase().includes(lowerQuery);\n        });\n      }\n\n      return people;\n    };\n\n    const filteredPeople = getFilteredPeople();\n\n    const getSortPeople = (): Person[] => {\n      let persons = people;\n\n      if (sortBy && sortOrder === 'asc') {\n        switch (sortBy) {\n          case 'name':\n          case 'sex':\n            persons = [...filteredPeople]\n              .sort((a, b) => a[sortBy].localeCompare(b[sortBy]));\n            break;\n          case 'born':\n          case 'died':\n            persons = [...filteredPeople]\n              .sort((a, b) => +a[sortBy] - +b[sortBy]);\n            break;\n          default:\n            persons = [...filteredPeople];\n        }\n      }\n\n      if (sortBy && sortOrder === 'desc') {\n        persons = [...filteredPeople].reverse();\n      }\n\n      if (!sortBy && !sortOrder) {\n        persons = filteredPeople;\n      }\n\n      return persons;\n    };\n\n    const getParent = (parentName: string) => {\n      return getSortPeople().find((person: Person) => parentName === person.name);\n    };\n\n    const showOrderIMG = (title: string) => {\n      if (sortOrder === 'asc' && sortBy === title) {\n        return <img src=\"images/sort_asc.png\" alt={title} />;\n      }\n\n      if (sortOrder === 'desc' && sortBy === title) {\n        return <img src=\"images/sort_desc.png\" alt={title} />;\n      }\n\n      return <img src=\"images/sort_both.png\" alt={title} />;\n    };\n\n    return (\n      <div className=\"table_root\">\n        <table\n          style={styleForTable}\n          className=\"table\n            is-bordered\n            is-striped\n            is-narrow\n            is-hoverable\n            is-fullwidth\"\n        >\n          <thead>\n            <tr onClick={handleSortChange}>\n              <th>\n                Name\n                {showOrderIMG('name')}\n              </th>\n              <th>\n                Sex\n                {showOrderIMG('sex')}\n              </th>\n              <th>\n                Born\n                {showOrderIMG('born')}\n              </th>\n              <th>\n                Died\n                {showOrderIMG('died')}\n              </th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {getSortPeople().map((person: Person) => (\n              <PersonRow\n                key={person.name}\n                person={person}\n                mother={getParent(person.motherName)}\n                father={getParent(person.fatherName)}\n              />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  },\n);\n","// export const validateName = name.match(/^[a-zA-Zа-яА-Я'][a-zA-Zа-яА-Я-' ]+[a-zA-Zа-яА-Я']?$/u);\n// export const validateBorn = +born >= 1400 && +born <= 2021 && born.length > 0;\n// export const validateDied = +died <= 2021 && +died >= +born && died.length > 0;\n// export const age = +died - +born;\n// export const validateAge = age >= 0 && age <= 150;\n\nexport const validateName = (name) => {\n  return name.match(/^[a-zA-Zа-яА-Я'][a-zA-Zа-яА-Я-' ]+[a-zA-Zа-яА-Я']?$/u);\n};\n\nexport const validateDied = (born, died) => {\n  return +died <= 2021 && +died >= +born && died.length > 0;\n};\n\nexport const validateBorn = (born) => {\n  return +born >= 1400 && +born <= 2021 && born.length > 0;\n};\n\nexport const validateAge = (born, died) => {\n  const age = +died - +born;\n\n  return age >= 0 && age <= 150;\n};\n","import React, { useContext, useState } from 'react';\nimport className from 'classnames';\nimport { PeopleContext } from './PeopleContext';\nimport { Person } from './PersonRow';\nimport {\n  validateName,\n  validateBorn,\n  validateDied,\n  validateAge,\n} from './helpers';\n\nexport const NewPerson = () => {\n  const { people, setPeople } = useContext(PeopleContext);\n  const [person, setPerson] = useState<Person>({\n    name: '',\n    sex: '',\n    born: '',\n    died: '',\n    mother: '',\n    father: '',\n  });\n  const [blur, setBlur] = useState<Array<string>>([]);\n  const [isSecondClick, setClick] = useState(false);\n\n  const {\n    name, sex, born, died, mother, father,\n  } = person;\n\n  const createNewPerson = () => {\n    const newPerson = ({\n      name,\n      sex,\n      born,\n      died,\n      motherName: mother === 'Select mother' ? '' : mother,\n      fatherName: father === 'Select father' ? '' : father,\n      slug: `${name.toLocaleLowerCase().trim().split(' ').join('-')}-${born}`,\n    });\n\n    if (isSecondClick) {\n      setPeople([newPerson, ...people]);\n    }\n  };\n\n  const clearAllField = () => {\n    setPerson({\n      name: '',\n      sex: '',\n      born: '',\n      died: '',\n      mother: '',\n      father: '',\n    });\n  };\n\n  return (\n    <div className=\"control\">\n      <form\n        action=\"\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          createNewPerson();\n          setClick(!isSecondClick);\n          clearAllField();\n        }}\n      >\n        {isSecondClick && (\n          <>\n            <label htmlFor=\"name\" onBlur={() => setBlur([...blur, 'name'])}>\n              <p>Enter name:</p>\n              <input\n                className={className(\n                  'input',\n                  'is-rounded',\n                  { 'is-danger': !validateName(name) && name.length > 0 },\n                )}\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                value={name}\n                onChange={e => setPerson({\n                  ...person,\n                  name: e.target.value,\n                })}\n              />\n            </label>\n            {(!validateName(name) && name.length > 0) && (\n              <div className=\"Error\">Incorrect name!</div>\n            )}\n\n            <label htmlFor=\"sex\" className=\"radio\">\n              <p>Choose sex:</p>\n              <input\n                type=\"radio\"\n                name=\"answer\"\n                id=\"m\"\n                checked={sex === 'm'}\n                onChange={e => setPerson({\n                  ...person,\n                  sex: e.target.id,\n                })}\n              />\n              Male\n              <input\n                type=\"radio\"\n                name=\"answer\"\n                id=\"f\"\n                checked={sex === 'f'}\n                onChange={e => setPerson({\n                  ...person,\n                  sex: e.target.id,\n                })}\n              />\n              Female\n            </label>\n\n            <label htmlFor=\"born\" onBlur={() => setBlur([...blur, 'born'])}>\n              <p>Choose born date:</p>\n              <input\n                className={className(\n                  'input',\n                  'is-rounded',\n                  { 'is-danger': !validateBorn(born) && born.length > 0 },\n                )}\n                type=\"number\"\n                name=\"born\"\n                id=\"born\"\n                value={!born ? '' : born}\n                onChange={e => setPerson({\n                  ...person,\n                  born: e.target.value,\n                })}\n              />\n            </label>\n            {!validateBorn(born) && born.length > 0 && (\n              <div className=\"Error\">Year of birth must be greater than 1400 and less 2021!</div>\n            )}\n\n            <label htmlFor=\"died\" onBlur={() => setBlur([...blur, 'died'])}>\n              <p>Choose died date:</p>\n              <input\n                className={className(\n                  'input',\n                  'is-rounded',\n                  { 'is-danger': !validateDied(born, died) && died.length > 0 },\n                )}\n                type=\"number\"\n                name=\"died\"\n                id=\"died\"\n                value={!died ? '' : died}\n                onChange={e => setPerson({\n                  ...person,\n                  died: e.target.value,\n                })}\n                disabled={!validateBorn(born)}\n              />\n            </label>\n            {!validateDied(born, died) && died.length > 0 && (\n              <div className=\"Error\">\n                Incorect date of death!\n              </div>\n            )}\n            {!validateAge(born, died) && born.length > 0 && died.length > 0 && (\n              <div className=\"Error\">\n                Total age should be in the range 0 - 150!\n              </div>\n            )}\n            {+born < 1871 && born.length === 4 && (\n              <div className=\"Error\">\n                Please enter the date of death!\n              </div>\n            )}\n\n            <div className=\"select is-rounded\">\n              <label htmlFor=\"mother\" className=\"my_select\">\n                <p>\n                  Choose mother:\n                  <span>*</span>\n                </p>\n                <select\n                  id=\"mother\"\n                  value={mother}\n                  onChange={e => setPerson({\n                    ...person,\n                    mother: e.target.value,\n                  })}\n                  disabled={+born < 1400}\n                >\n                  <option>Select mother</option>\n                  {people\n                    .filter((newPerson: Person) => newPerson.sex === 'f' && +newPerson.died > +born)\n                    .map(newPerson => (\n                      <option key={newPerson.name}>{newPerson.name}</option>\n                    ))}\n                </select>\n              </label>\n            </div>\n\n            <div className=\"select is-rounded\">\n              <label htmlFor=\"father\" className=\"my_select\">\n                <p>\n                  Choose father:\n                  <span>*</span>\n                </p>\n                <select\n                  id=\"father\"\n                  value={father}\n                  onChange={e => setPerson({\n                    ...person,\n                    father: e.target.value,\n                  })}\n                  disabled={+born < 1400}\n                >\n                  <option>Select father</option>\n                  {people\n                    .filter((newPerson: Person) => newPerson.sex === 'm' && +newPerson.died > +born)\n                    .map(newPerson => (\n                      <option key={newPerson.name}>{newPerson.name}</option>\n                    ))}\n                </select>\n              </label>\n            </div>\n          </>\n        )}\n\n        <button\n          id=\"submit\"\n          type=\"submit\"\n          className=\"button is-light\"\n          disabled={(\n            !validateName(name)\n            || !sex\n            || !validateBorn(born)\n            || (+born < 1871 && +died < +born))\n            && isSecondClick}\n        >\n          Add person\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React, { useCallback, useState, MouseEvent } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport debounce from 'lodash/debounce';\nimport { PeopleTable } from './PeopleTable';\nimport { NewPerson } from './NewPerson';\n\nexport const PeoplePage = () => {\n  const { search } = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(search);\n  const appliedQuery = searchParams.get('query') || '';\n  const [query, setQuery] = useState(appliedQuery);\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n\n  const applyQuery = useCallback(\n    debounce((newQuery) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery);\n      } else {\n        searchParams.delete('query');\n      }\n\n      history.push({\n        search: searchParams.toString(),\n      });\n    }, 1000),\n    [],\n  );\n\n  const handleQueryChange = (value: string) => {\n    setQuery(value);\n    applyQuery(value);\n  };\n\n  const handleSortChange = (event: MouseEvent) => {\n    const { textContent } = event.target as HTMLElement;\n\n    if (textContent !== null) {\n      switch (textContent) {\n        case 'Mother':\n        case 'Father':\n          searchParams.delete('sortBy');\n          searchParams.delete('sortOrder');\n          break;\n        default:\n          searchParams.set('sortBy', textContent.toLocaleLowerCase());\n          searchParams.set('sortOrder', 'asc');\n\n          if (textContent.toLocaleLowerCase() === sortBy && sortOrder === 'asc') {\n            searchParams.set('sortOrder', 'desc');\n          } else {\n            searchParams.set('sortOrder', 'asc');\n          }\n\n          break;\n      }\n    }\n\n    // if (textContent === 'Mother' || textContent === 'Father') {\n    //   searchParams.delete('sortBy');\n    //   searchParams.delete('sortOrder');\n    // } else if (textContent !== null) {\n    //   searchParams.set('sortBy', textContent.toLowerCase());\n    //   searchParams.set('sortOrder', 'asc');\n\n    //   if (textContent.toLowerCase() === sortBy && sortOrder === 'asc') {\n    //     searchParams.set('sortOrder', 'desc');\n    //   } else {\n    //     searchParams.set('sortOrder', 'asc');\n    //   }\n    // }\n\n    history.push({\n      search: searchParams.toString(),\n    });\n  };\n\n  return (\n    <>\n      <h2>People page</h2>\n      <div className=\"table_settings\">\n        <input\n          type=\"text\"\n          className=\"input is-rounded\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={({ target }) => handleQueryChange(target.value)}\n        />\n        <NewPerson />\n      </div>\n      <PeopleTable\n        query={appliedQuery}\n        handleSortChange={handleSortChange}\n        sortBy={sortBy}\n        sortOrder={sortOrder}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\n\nimport './App.scss';\nimport 'bulma';\n\nimport { Header } from './components/Header';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { PeopleProvider } from './components/PeopleContext';\n\nconst App = () => (\n  <PeopleProvider>\n    <div className=\"content is-medium\">\n      <div className=\"App\">\n        <Header />\n\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            component={HomePage}\n          />\n\n          <Route\n            path=\"/people\"\n            component={PeoplePage}\n          />\n\n          <Redirect path=\"/home\" to=\"/\" />\n\n          <NotFoundPage />\n        </Switch>\n      </div>\n    </div>\n  </PeopleProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}