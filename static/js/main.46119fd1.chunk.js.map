{"version":3,"sources":["components/Header.tsx","components/HomePage.tsx","components/NotFoundPage.tsx","components/PeopleContext.tsx","api/people.js","components/PersonName.tsx","components/PersonRow.tsx","components/PeopleTable.tsx","components/NewPerson.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Header","className","to","exact","activeClassName","type","HomePage","NotFoundPage","PeopleContext","React","createContext","people","setPeople","PeopleProvider","children","useState","useEffect","fetch","then","response","json","contextValue","Provider","value","PersonName","props","name","sex","slug","style","color","PersonRow","memo","useLocation","pathname","search","person","born","died","motherName","fatherName","mother","father","backgroundColor","includes","styleForTable","borderCollapse","PeopleTable","useContext","lowerQuery","query","toLowerCase","sortBy","handleSortChange","sortOrder","filteredPeople","filter","toLocaleLowerCase","getSortPeople","persons","sort","a","b","localeCompare","reverse","getParent","parentName","find","showOrderIMG","title","src","alt","onClick","map","key","NewPerson","setName","setSex","setBorn","setDied","setMother","setFather","blur","setBlur","isClick","setClick","validateName","match","validateBorn","length","validateDied","age","validateAge","action","htmlFor","onBlur","id","onChange","e","target","checked","disabled","newPerson","trim","split","join","createNewPerson","PeoplePage","history","useHistory","searchParams","URLSearchParams","appliedQuery","get","setQuery","applyQuery","useCallback","debounce","newQuery","set","delete","push","toString","placeholder","event","textContent","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"kPAGaA,G,YAAS,kBACpB,oCACE,4BAAQC,UAAU,UAChB,6BACE,kBAAC,IAAD,CACEC,GAAG,IACHC,OAAK,EACLC,gBAAgB,aAEhB,4BAAQH,UAAU,iBAAiBI,KAAK,UAAxC,SAIF,kBAAC,IAAD,CACEH,GAAG,SACHE,gBAAgB,aAEhB,4BAAQH,UAAU,iBAAiBI,KAAK,UAAxC,gBClBGC,EAAW,kBACtB,0CCDWC,EAAe,kBAC1B,+C,+BCaWC,EAAgBC,IAAMC,cALA,CACjCC,OAAQ,GACRC,UAAW,eAKAC,EAA2B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAC5BC,mBAAwB,IADI,mBACjDJ,EADiD,KACzCC,EADyC,KAGxDI,qBAAU,WCnBmBC,MAFZ,qEAGhBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDoBtBF,KAAKN,KACP,IAEH,IAAMS,EAA6B,CACjCV,SACAC,aAGF,OACE,kBAACJ,EAAcc,SAAf,CAAwBC,MAAOF,GAC5BP,IE9BMU,EAAa,SAACC,GAIpB,IACGC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,IAAKC,EAASH,EAATG,KAcnB,OACE,kBAAC,IAAD,CACE1B,GAAE,kBAAa0B,GACfC,MAAO,CACLC,MAfQ,MAARH,EACK,MAGG,MAARA,EACK,OAGF,UAUJD,ICrBMK,EAAYtB,IAAMuB,MAAK,SAACP,GAI9B,IAAD,EACyBQ,cAArBC,EADJ,EACIA,SAAUC,EADd,EACcA,OADd,EAIAV,EAAMW,OADRV,EAHE,EAGFA,KAAMC,EAHJ,EAGIA,IAAKU,EAHT,EAGSA,KAAMC,EAHf,EAGeA,KAAMC,EAHrB,EAGqBA,WAAYC,EAHjC,EAGiCA,WAAYZ,EAH7C,EAG6CA,KAEzCa,EAAmBhB,EAAnBgB,OAAQC,EAAWjB,EAAXiB,OAEhB,OACE,wBAAIzC,UAAU,SAAS4B,MAAO,CAAEc,gBAAiBT,EAASU,SAAShB,GAAQ,SAAW,KACpF,wBACEC,MAAO,CACLc,gBAAiBR,EAAOS,SAAS,QAAU,UAAY,KAGzD,kBAAC,EAAD,CACElB,KAAMA,EACNC,IAAKA,EACLC,KAAMA,KAGV,wBACEC,MAAO,CACLc,gBAAiBR,EAAOS,SAAS,OAAS,UAAY,KAGvDjB,GAEH,wBACEE,MAAO,CACLc,gBAAiBR,EAAOS,SAAS,QAAU,UAAY,KAGxDP,GAEH,wBACER,MAAO,CACLc,gBAAiBR,EAAOS,SAAS,QAAU,UAAY,KAGxDN,GAEH,4BACE,kBAAC,EAAD,CACEZ,KAAMe,EAASA,EAAOf,KAAOa,EAC7BZ,IAAKc,EAASA,EAAOd,IAAM,GAC3BC,KAAMa,EAASA,EAAOb,KAAO,MAGjC,4BACE,kBAAC,EAAD,CACEF,KAAMgB,EAASA,EAAOhB,KAAOc,EAC7Bb,IAAKe,EAASA,EAAOf,IAAM,GAC3BC,KAAMc,EAASA,EAAOd,KAAO,UC5DjCiB,EAAqC,CACzCC,eAAgB,YAGLC,EAActC,IAAMuB,MAC/B,SAACP,GAKM,IACGd,EAAWqC,qBAAWxC,GAAtBG,OACFsC,EAAaxB,EAAMyB,MAAMC,cAE7BC,EACE3B,EADF2B,OAAQC,EACN5B,EADM4B,iBAAkBC,EACxB7B,EADwB6B,UAmBtBC,EAlBF9B,EADmCyB,MAK5BvC,EAAO6C,QAAO,SAACpB,GACpB,OAAKA,EAAOV,MAASU,EAAOG,YAAeH,EAAOI,WAI3CJ,EAAOV,KAAK+B,oBAAoBb,SAASK,IAC7Cb,EAAOG,WAAWkB,oBAAoBb,SAASK,IAC/Cb,EAAOI,WAAWiB,oBAAoBb,SAASK,GALzC,QASNtC,EAKH+C,EAAgB,WACpB,IAAIC,EAAUhD,EAEd,GAAIyC,GAAwB,QAAdE,EACZ,OAAQF,GACN,IAAK,OACL,IAAK,MACHO,EAAU,YAAIJ,GACXK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAET,GAAQW,cAAcD,EAAEV,OAC5C,MACF,IAAK,OACL,IAAK,OACHO,EAAU,YAAIJ,GACXK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAET,IAAWU,EAAEV,MAClC,MACF,QACEO,EAAO,YAAOJ,GAYpB,OARIH,GAAwB,SAAdE,IACZK,EAAU,YAAIJ,GAAgBS,WAG3BZ,GAAWE,IACdK,EAAUJ,GAGLI,GAGHM,EAAY,SAACC,GACjB,OAAOR,IAAgBS,MAAK,SAAC/B,GAAD,OAAoB8B,IAAe9B,EAAOV,SAGlE0C,EAAe,SAACC,GACpB,MAAkB,QAAdf,GAAuBF,IAAWiB,EAC7B,yBAAKC,IAAI,uBAAuBC,IAAKF,IAG5B,SAAdf,GAAwBF,IAAWiB,EAC9B,yBAAKC,IAAI,wBAAwBC,IAAKF,IAGxC,yBAAKC,IAAI,wBAAwBC,IAAKF,KAG/C,OACE,yBAAKpE,UAAU,cACb,2BACE4B,MAAOgB,EACP5C,UAAU,oEAOV,+BACE,wBAAIuE,QAASnB,GACX,mCAEGe,EAAa,SAEhB,kCAEGA,EAAa,QAEhB,mCAEGA,EAAa,SAEhB,mCAEGA,EAAa,SAEhB,sCACA,wCAIJ,+BACGV,IAAgBe,KAAI,SAACrC,GAAD,OACnB,kBAACL,EAAD,CACE2C,IAAKtC,EAAOV,KACZU,OAAQA,EACRK,OAAQwB,EAAU7B,EAAOG,YACzBG,OAAQuB,EAAU7B,EAAOI,uB,iBCzH5BmC,EAAY,WAAO,IAAD,EACC3B,qBAAWxC,GAAjCG,EADqB,EACrBA,OAAQC,EADa,EACbA,UADa,EAELG,mBAAS,IAFJ,mBAEtBW,EAFsB,KAEhBkD,EAFgB,OAGP7D,mBAAS,IAHF,mBAGtBY,EAHsB,KAGjBkD,EAHiB,OAIL9D,mBAAS,IAJJ,mBAItBsB,EAJsB,KAIhByC,EAJgB,OAKL/D,mBAAS,IALJ,mBAKtBuB,EALsB,KAKhByC,EALgB,OAMDhE,mBAAS,IANR,mBAMtB0B,EANsB,KAMduC,EANc,OAODjE,mBAAS,IAPR,mBAOtB2B,EAPsB,KAOduC,EAPc,OAQLlE,mBAAwB,IARnB,mBAQtBmE,EARsB,KAQhBC,EARgB,OASDpE,oBAAS,GATR,mBAStBqE,EATsB,KASbC,EATa,KAWvBC,EAAe5D,EAAK6D,MAAM,+EAC1BC,GAAgBnD,GAAQ,OAASA,GAAQ,MAAQA,EAAKoD,OAAS,EAC/DC,GAAgBpD,GAAQ,OAASA,IAASD,GAAQC,EAAKmD,OAAS,EAChEE,GAAOrD,GAAQD,EACfuD,EAAcD,GAAO,GAAKA,GAAO,IA2BvC,OACE,yBAAK1F,UAAU,WACb,0BAAM4F,OAAO,IACVT,GACC,oCACE,2BAAOU,QAAQ,OAAOC,OAAQ,kBAAMZ,EAAQ,GAAD,mBAAKD,GAAL,CAAW,YACpD,0CACA,2BACEjF,UAAWA,IACT,QACA,aACA,CAAE,aAAcqF,GAAgB5D,EAAK+D,OAAS,IAEhDpF,KAAK,OACLqB,KAAK,OACLsE,GAAG,OACHzE,MAAOG,EACPuE,SAAU,SAAAC,GAAC,OAAItB,EAAQsB,EAAEC,OAAO5E,YAGjC+D,GAAgB5D,EAAK+D,OAAS,GAC/B,yBAAKxF,UAAU,SAAf,mBAGF,2BAAO6F,QAAQ,MAAM7F,UAAU,SAC7B,0CACA,2BACEI,KAAK,QACLqB,KAAK,SACLsE,GAAG,IACHI,QAAiB,MAARzE,EACTsE,SAAU,SAAAC,GAAC,OAAIrB,EAAOqB,EAAEC,OAAOH,OAPnC,OAUE,2BACE3F,KAAK,QACLqB,KAAK,SACLsE,GAAG,IACHI,QAAiB,MAARzE,EACTsE,SAAU,SAAAC,GAAC,OAAIrB,EAAOqB,EAAEC,OAAOH,OAfnC,UAoBA,2BAAOF,QAAQ,OAAOC,OAAQ,kBAAMZ,EAAQ,GAAD,mBAAKD,GAAL,CAAW,YACpD,gDACA,2BACEjF,UAAWA,IACT,QACA,aACA,CAAE,aAAcuF,GAAgBnD,EAAKoD,OAAS,IAEhDpF,KAAK,SACLqB,KAAK,OACLsE,GAAG,OACHzE,MAAQc,GAAO,GACf4D,SAAU,SAAAC,GAAC,OAAIpB,EAAQoB,EAAEC,OAAO5E,YAGlCiE,GAAgBnD,EAAKoD,OAAS,GAC9B,yBAAKxF,UAAU,SAAf,0DAGF,2BAAO6F,QAAQ,OAAOC,OAAQ,kBAAMZ,EAAQ,GAAD,mBAAKD,GAAL,CAAW,YACpD,gDACA,2BACEjF,UAAWA,IACT,QACA,aACA,CAAE,aAAcyF,GAAgBpD,EAAKmD,OAAS,IAEhDpF,KAAK,SACLqB,KAAK,OACLsE,GAAG,OACHzE,MAAQe,GAAO,GACf2D,SAAU,SAAAC,GAAC,OAAInB,EAAQmB,EAAEC,OAAO5E,QAChC8E,UAAWb,MAGbE,GAAgBpD,EAAKmD,OAAS,GAC9B,yBAAKxF,UAAU,SAAf,4BAIA2F,GAAevD,EAAKoD,OAAS,GAAKnD,EAAKmD,OAAS,GAChD,yBAAKxF,UAAU,SAAf,6CAKF,yBAAKA,UAAU,qBACb,2BAAO6F,QAAQ,SAAS7F,UAAU,aAChC,4CAEE,oCAEF,4BACE+F,GAAG,SACHzE,MAAOkB,EACPwD,SAAU,SAAAC,GAAC,OAAIlB,EAAUkB,EAAEC,OAAO5E,QAClC8E,UAAWhE,EAAO,MAElB,iDACC1B,EACE6C,QAAO,SAACpB,GAAD,MAAmC,MAAfA,EAAOT,MAAgBS,EAAOE,MAAQD,KACjEoC,KAAI,SAAArC,GAAM,OACT,4BAAQsC,IAAKtC,EAAOV,MAAOU,EAAOV,YAM5C,yBAAKzB,UAAU,qBACb,2BAAO6F,QAAQ,SAAS7F,UAAU,aAChC,4CAEE,oCAEF,4BACE+F,GAAG,SACHzE,MAAOmB,EACPuD,SAAU,SAAAC,GAAC,OAAIjB,EAAUiB,EAAEC,OAAO5E,QAClC8E,UAAWhE,EAAO,MAElB,iDACC1B,EACE6C,QAAO,SAACpB,GAAD,MAAmC,MAAfA,EAAOT,MAAgBS,EAAOE,MAAQD,KACjEoC,KAAI,SAAArC,GAAM,OACT,4BAAQsC,IAAKtC,EAAOV,MAAOU,EAAOV,aAQhD,4BACEsE,GAAG,SACH3F,KAAK,SACLJ,UAAU,kBACVoG,WACGf,IAAiB3D,IAAQ6D,IAAkBnD,EAAO,OAASC,GAAQD,IAAU+C,EAChFZ,QAAS,YAvKO,WACtB,IAAM8B,EAAa,CACjB5E,OACAC,MACAU,OACAC,OACAC,WAAYE,EACZD,WAAYE,EACZd,KAAK,GAAD,OAAKF,EAAK+B,oBAAoB8C,OAAOC,MAAM,KAAKC,KAAK,KAArD,YAA6DpE,IAG/D+C,GACFxE,EAAU,CAAC0F,GAAF,mBAAgB3F,KA4JnB+F,GACArB,GAAUD,GAxJlBR,EAAQ,IACRC,EAAO,IACPE,EAAQ,IACRD,EAAQ,IACRE,EAAU,IACVC,EAAU,MA2IN,iBCjLK0B,EAAa,WAAO,IACvBxE,EAAWF,cAAXE,OACFyE,EAAUC,cACVC,EAAe,IAAIC,gBAAgB5E,GACnC6E,EAAeF,EAAaG,IAAI,UAAY,GAJpB,EAKJlG,mBAASiG,GALL,mBAKvB9D,EALuB,KAKhBgE,EALgB,KAMxB9D,EAAS0D,EAAaG,IAAI,WAAa,GACvC3D,EAAYwD,EAAaG,IAAI,cAAgB,GAE7CE,EAAaC,sBACjBC,KAAS,SAACC,GACJA,EACFR,EAAaS,IAAI,QAASD,GAE1BR,EAAaU,OAAO,SAGtBZ,EAAQa,KAAK,CACXtF,OAAQ2E,EAAaY,eAEtB,KACH,IA8BF,OACE,oCACE,2CACA,yBAAKzH,UAAU,kBACb,2BACEI,KAAK,OACLJ,UAAU,mBACV0H,YAAY,YACZpG,MAAO2B,EACP+C,SAAU,SAACC,GAAD,OApCS3E,EAoCgB2E,EAAEC,OAAO5E,MAnClD2F,EAAS3F,QACT4F,EAAW5F,GAFa,IAACA,KAsCrB,kBAAC,EAAD,OAEF,kBAACwB,EAAD,CACEG,MAAO8D,EACP3D,iBArCmB,SAACuE,GAAuB,IACvCC,EAAgBD,EAAMzB,OAAtB0B,YAEY,WAAhBA,GAA4C,WAAhBA,GAC9Bf,EAAaU,OAAO,UACpBV,EAAaU,OAAO,cACK,OAAhBK,IACTf,EAAaS,IAAI,SAAUM,EAAY1E,eACvC2D,EAAaS,IAAI,YAAa,OAE1BM,EAAY1E,gBAAkBC,GAAwB,QAAdE,EAC1CwD,EAAaS,IAAI,YAAa,QAE9BT,EAAaS,IAAI,YAAa,QAIlCX,EAAQa,KAAK,CACXtF,OAAQ2E,EAAaY,cAoBnBtE,OAAQA,EACRE,UAAWA,MCnCJwE,EA3BH,kBACV,kBAAC,EAAD,KACE,yBAAK7H,UAAU,qBACb,yBAAKA,UAAU,OACb,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE8H,KAAK,IACL5H,OAAK,EACL6H,UAAW1H,IAGb,kBAAC,IAAD,CACEyH,KAAK,UACLC,UAAWrB,IAGb,kBAAC,IAAD,CAAUoB,KAAK,QAAQ7H,GAAG,MAE1B,kBAAC,EAAD,WC1BV+H,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.46119fd1.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header = () => (\n  <>\n    <header className=\"header\">\n      <nav>\n        <NavLink\n          to=\"/\"\n          exact\n          activeClassName=\"is-active\"\n        >\n          <button className=\"button is-dark\" type=\"button\">\n            Home\n          </button>\n        </NavLink>\n        <NavLink\n          to=\"people\"\n          activeClassName=\"is-active\"\n        >\n          <button className=\"button is-dark\" type=\"button\">\n            People\n          </button>\n        </NavLink>\n      </nav>\n    </header>\n  </>\n);\n","import React from 'react';\n\nexport const HomePage = () => (\n  <h2>Home page</h2>\n);\n","import React from 'react';\n\nexport const NotFoundPage = () => (\n  <h2>Page not found</h2>\n);\n","import React, {\n  useState, useEffect, Dispatch, SetStateAction,\n} from 'react';\nimport { getPeople } from '../api/people';\nimport { Person } from './PersonRow';\n\ntype ContextProps = {\n  people: Person[];\n  setPeople: Dispatch<SetStateAction<Person[]>>;\n};\n\nconst contextProps: ContextProps = {\n  people: [],\n  setPeople: () => {},\n};\n\nexport const PeopleContext = React.createContext<ContextProps>(contextProps);\n\nexport const PeopleProvider: React.FC = ({ children }) => {\n  const [people, setPeople] = useState<Array<Person>>([]);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople);\n  }, []);\n\n  const contextValue: ContextProps = {\n    people,\n    setPeople,\n  };\n\n  return (\n    <PeopleContext.Provider value={contextValue}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","const PEOPLE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = () => fetch(PEOPLE_URL)\n  .then(response => response.json());\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const PersonName = (props: {\n  name: string;\n  sex: string;\n  slug: string;\n}) => {\n  const { name, sex, slug } = props;\n\n  const setColor = () => {\n    if (sex === 'f') {\n      return 'red';\n    }\n\n    if (sex === 'm') {\n      return 'blue';\n    }\n\n    return 'black';\n  };\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      style={{\n        color: setColor(),\n      }}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { useLocation } from 'react-router';\nimport { PersonName } from './PersonName';\n\nexport type Person = {\n  [key: string]: string;\n};\n\nexport const PersonRow = React.memo((props: {\n  person: Person;\n  mother: Person | undefined;\n  father: Person | undefined;\n}) => {\n  const { pathname, search } = useLocation();\n  const {\n    name, sex, born, died, motherName, fatherName, slug,\n  } = props.person;\n  const { mother, father } = props;\n\n  return (\n    <tr className=\"Person\" style={{ backgroundColor: pathname.includes(slug) ? 'yellow' : '' }}>\n      <td\n        style={{\n          backgroundColor: search.includes('name') ? '#c0c0c0' : '',\n        }}\n      >\n        <PersonName\n          name={name}\n          sex={sex}\n          slug={slug}\n        />\n      </td>\n      <td\n        style={{\n          backgroundColor: search.includes('sex') ? '#c0c0c0' : '',\n        }}\n      >\n        {sex}\n      </td>\n      <td\n        style={{\n          backgroundColor: search.includes('born') ? '#c0c0c0' : '',\n        }}\n      >\n        {born}\n      </td>\n      <td\n        style={{\n          backgroundColor: search.includes('died') ? '#c0c0c0' : '',\n        }}\n      >\n        {died}\n      </td>\n      <td>\n        <PersonName\n          name={mother ? mother.name : motherName}\n          sex={mother ? mother.sex : ''}\n          slug={mother ? mother.slug : ''}\n        />\n      </td>\n      <td>\n        <PersonName\n          name={father ? father.name : fatherName}\n          sex={father ? father.sex : ''}\n          slug={father ? father.slug : ''}\n        />\n      </td>\n    </tr>\n  );\n});\n","import React, { useContext, MouseEventHandler } from 'react';\nimport { PeopleContext } from './PeopleContext';\nimport { PersonRow, Person } from './PersonRow';\n\nconst styleForTable: React.CSSProperties = {\n  borderCollapse: 'collapse',\n};\n\nexport const PeopleTable = React.memo(\n  (props: {\n    handleSortChange: MouseEventHandler;\n    sortBy: string;\n    sortOrder: string;\n    query: string;\n  }) => {\n    const { people } = useContext(PeopleContext);\n    const lowerQuery = props.query.toLowerCase();\n    const {\n      sortBy, handleSortChange, sortOrder, query,\n    } = props;\n\n    const getFilteredPeople = (): Person[] => {\n      if (query) {\n        return people.filter((person: Person) => {\n          if (!person.name || !person.motherName || !person.fatherName) {\n            return null;\n          }\n\n          return person.name.toLocaleLowerCase().includes(lowerQuery)\n          || person.motherName.toLocaleLowerCase().includes(lowerQuery)\n          || person.fatherName.toLocaleLowerCase().includes(lowerQuery);\n        });\n      }\n\n      return people;\n    };\n\n    const filteredPeople = getFilteredPeople();\n\n    const getSortPeople = (): Person[] => {\n      let persons = people;\n\n      if (sortBy && sortOrder === 'asc') {\n        switch (sortBy) {\n          case 'name':\n          case 'sex':\n            persons = [...filteredPeople]\n              .sort((a, b) => a[sortBy].localeCompare(b[sortBy]));\n            break;\n          case 'born':\n          case 'died':\n            persons = [...filteredPeople]\n              .sort((a, b) => +a[sortBy] - +b[sortBy]);\n            break;\n          default:\n            persons = [...filteredPeople];\n        }\n      }\n\n      if (sortBy && sortOrder === 'desc') {\n        persons = [...filteredPeople].reverse();\n      }\n\n      if (!sortBy && !sortOrder) {\n        persons = filteredPeople;\n      }\n\n      return persons;\n    };\n\n    const getParent = (parentName: string) => {\n      return getSortPeople().find((person: Person) => parentName === person.name);\n    };\n\n    const showOrderIMG = (title: string) => {\n      if (sortOrder === 'asc' && sortBy === title) {\n        return <img src=\"/images/sort_asc.png\" alt={title} />;\n      }\n\n      if (sortOrder === 'desc' && sortBy === title) {\n        return <img src=\"/images/sort_desc.png\" alt={title} />;\n      }\n\n      return <img src=\"/images/sort_both.png\" alt={title} />;\n    };\n\n    return (\n      <div className=\"table_root\">\n        <table\n          style={styleForTable}\n          className=\"table\n            is-bordered\n            is-striped\n            is-narrow\n            is-hoverable\n            is-fullwidth\"\n        >\n          <thead>\n            <tr onClick={handleSortChange}>\n              <th>\n                Name\n                {showOrderIMG('name')}\n              </th>\n              <th>\n                Sex\n                {showOrderIMG('sex')}\n              </th>\n              <th>\n                Born\n                {showOrderIMG('born')}\n              </th>\n              <th>\n                Died\n                {showOrderIMG('died')}\n              </th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {getSortPeople().map((person: Person) => (\n              <PersonRow\n                key={person.name}\n                person={person}\n                mother={getParent(person.motherName)}\n                father={getParent(person.fatherName)}\n              />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  },\n);\n","import React, { useContext, useState } from 'react';\nimport className from 'classnames';\nimport { PeopleContext } from './PeopleContext';\nimport { Person } from './PersonRow';\n\nexport const NewPerson = () => {\n  const { people, setPeople } = useContext(PeopleContext);\n  const [name, setName] = useState('');\n  const [sex, setSex] = useState('');\n  const [born, setBorn] = useState('');\n  const [died, setDied] = useState('');\n  const [mother, setMother] = useState('');\n  const [father, setFather] = useState('');\n  const [blur, setBlur] = useState<Array<string>>([]);\n  const [isClick, setClick] = useState(false);\n\n  const validateName = name.match(/^[a-zA-Zа-яА-Я'][a-zA-Zа-яА-Я-' ]+[a-zA-Zа-яА-Я']?$/u);\n  const validateBorn = +born >= 1400 && +born <= 2021 && born.length > 0;\n  const validateDied = +died <= 2021 && +died >= +born && died.length > 0;\n  const age = +died - +born;\n  const validateAge = age >= 0 && age <= 150;\n\n  const createNewPerson = () => {\n    const newPerson = ({\n      name,\n      sex,\n      born,\n      died,\n      motherName: mother,\n      fatherName: father,\n      slug: `${name.toLocaleLowerCase().trim().split(' ').join('-')}-${born}`,\n    });\n\n    if (isClick) {\n      setPeople([newPerson, ...people]);\n    }\n  };\n\n  const clearAllField = () => {\n    setName('');\n    setSex('');\n    setDied('');\n    setBorn('');\n    setMother('');\n    setFather('');\n  };\n\n  return (\n    <div className=\"control\">\n      <form action=\"\">\n        {isClick && (\n          <>\n            <label htmlFor=\"name\" onBlur={() => setBlur([...blur, 'name'])}>\n              <p>Enter name:</p>\n              <input\n                className={className(\n                  'input',\n                  'is-rounded',\n                  { 'is-danger': !validateName && name.length > 0 },\n                )}\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                value={name}\n                onChange={e => setName(e.target.value)}\n              />\n            </label>\n            {(!validateName && name.length > 0) && (\n              <div className=\"Error\">Incorrect name!</div>\n            )}\n\n            <label htmlFor=\"sex\" className=\"radio\">\n              <p>Choose sex:</p>\n              <input\n                type=\"radio\"\n                name=\"answer\"\n                id=\"m\"\n                checked={sex === 'm'}\n                onChange={e => setSex(e.target.id)}\n              />\n              Male\n              <input\n                type=\"radio\"\n                name=\"answer\"\n                id=\"f\"\n                checked={sex === 'f'}\n                onChange={e => setSex(e.target.id)}\n              />\n              Female\n            </label>\n\n            <label htmlFor=\"born\" onBlur={() => setBlur([...blur, 'born'])}>\n              <p>Choose born date:</p>\n              <input\n                className={className(\n                  'input',\n                  'is-rounded',\n                  { 'is-danger': !validateBorn && born.length > 0 },\n                )}\n                type=\"number\"\n                name=\"born\"\n                id=\"born\"\n                value={!born ? '' : born}\n                onChange={e => setBorn(e.target.value)}\n              />\n            </label>\n            {!validateBorn && born.length > 0 && (\n              <div className=\"Error\">Year of birth must be greater than 1400 and less 2021!</div>\n            )}\n\n            <label htmlFor=\"died\" onBlur={() => setBlur([...blur, 'died'])}>\n              <p>Choose died date:</p>\n              <input\n                className={className(\n                  'input',\n                  'is-rounded',\n                  { 'is-danger': !validateDied && died.length > 0 },\n                )}\n                type=\"number\"\n                name=\"died\"\n                id=\"died\"\n                value={!died ? '' : died}\n                onChange={e => setDied(e.target.value)}\n                disabled={!validateBorn}\n              />\n            </label>\n            {!validateDied && died.length > 0 && (\n              <div className=\"Error\">\n                Incorect date of death!\n              </div>\n            )}\n            {!validateAge && born.length > 0 && died.length > 0 && (\n              <div className=\"Error\">\n                Total age should be in the range 0 - 150!\n              </div>\n            )}\n\n            <div className=\"select is-rounded\">\n              <label htmlFor=\"mother\" className=\"my_select\">\n                <p>\n                  Choose mother:\n                  <span>*</span>\n                </p>\n                <select\n                  id=\"mother\"\n                  value={mother}\n                  onChange={e => setMother(e.target.value)}\n                  disabled={+born < 1400}\n                >\n                  <option>Select mother</option>\n                  {people\n                    .filter((person: Person) => person.sex === 'f' && +person.died > +born)\n                    .map(person => (\n                      <option key={person.name}>{person.name}</option>\n                    ))}\n                </select>\n              </label>\n            </div>\n\n            <div className=\"select is-rounded\">\n              <label htmlFor=\"father\" className=\"my_select\">\n                <p>\n                  Choose father:\n                  <span>*</span>\n                </p>\n                <select\n                  id=\"father\"\n                  value={father}\n                  onChange={e => setFather(e.target.value)}\n                  disabled={+born < 1400}\n                >\n                  <option>Select father</option>\n                  {people\n                    .filter((person: Person) => person.sex === 'm' && +person.died > +born)\n                    .map(person => (\n                      <option key={person.name}>{person.name}</option>\n                    ))}\n                </select>\n              </label>\n            </div>\n          </>\n        )}\n\n        <button\n          id=\"submit\"\n          type=\"button\"\n          className=\"button is-light\"\n          disabled={(\n            !validateName || !sex || !validateBorn || (+born < 1871 && +died < +born)) && isClick}\n          onClick={() => {\n            createNewPerson();\n            setClick(!isClick);\n            clearAllField();\n          }}\n        >\n          Add person\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React, { useCallback, useState, MouseEvent } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport debounce from 'lodash/debounce';\nimport { PeopleTable } from './PeopleTable';\nimport { NewPerson } from './NewPerson';\n\nexport const PeoplePage = () => {\n  const { search } = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(search);\n  const appliedQuery = searchParams.get('query') || '';\n  const [query, setQuery] = useState(appliedQuery);\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n\n  const applyQuery = useCallback(\n    debounce((newQuery) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery);\n      } else {\n        searchParams.delete('query');\n      }\n\n      history.push({\n        search: searchParams.toString(),\n      });\n    }, 1000),\n    [],\n  );\n\n  const handleQueryChange = (value: string) => {\n    setQuery(value);\n    applyQuery(value);\n  };\n\n  const handleSortChange = (event: MouseEvent) => {\n    const { textContent } = event.target as HTMLElement;\n\n    if (textContent === 'Mother' || textContent === 'Father') {\n      searchParams.delete('sortBy');\n      searchParams.delete('sortOrder');\n    } else if (textContent !== null) {\n      searchParams.set('sortBy', textContent.toLowerCase());\n      searchParams.set('sortOrder', 'asc');\n\n      if (textContent.toLowerCase() === sortBy && sortOrder === 'asc') {\n        searchParams.set('sortOrder', 'desc');\n      } else {\n        searchParams.set('sortOrder', 'asc');\n      }\n    }\n\n    history.push({\n      search: searchParams.toString(),\n    });\n  };\n\n  return (\n    <>\n      <h2>People page</h2>\n      <div className=\"table_settings\">\n        <input\n          type=\"text\"\n          className=\"input is-rounded\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => handleQueryChange(e.target.value)}\n        />\n        <NewPerson />\n      </div>\n      <PeopleTable\n        query={appliedQuery}\n        handleSortChange={handleSortChange}\n        sortBy={sortBy}\n        sortOrder={sortOrder}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\n\nimport './App.scss';\nimport 'bulma';\n\nimport { Header } from './components/Header';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { PeopleProvider } from './components/PeopleContext';\n\nconst App = () => (\n  <PeopleProvider>\n    <div className=\"content is-medium\">\n      <div className=\"App\">\n        <Header />\n\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            component={HomePage}\n          />\n\n          <Route\n            path=\"/people\"\n            component={PeoplePage}\n          />\n\n          <Redirect path=\"/home\" to=\"/\" />\n\n          <NotFoundPage />\n        </Switch>\n      </div>\n    </div>\n  </PeopleProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}